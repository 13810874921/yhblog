{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var getUrl = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            promise = new Promise(function (resolve, reject) {\n              axios.get(url).then(function (res) {\n                console.log(res.data);\n                resolve(res.data);\n              });\n            });\n            return _context.abrupt(\"return\", promise);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUrl(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var postUrl = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, params) {\n    var promise;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            promise = new Promise(function (resolve, reject) {\n              axios.post(url, params).then(function (res) {\n                console.log(res.data);\n                resolve(res.data);\n              });\n            });\n            return _context2.abrupt(\"return\", promise);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function postUrl(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}